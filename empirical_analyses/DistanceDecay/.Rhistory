intercept <- res_act_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (geo)
slope4 <- round(coefficients(DD.all.geo)[2], 3)
int4 <- round(coefficients(DD.all.geo)[1], 3)
p <- round(summary(DD.all.geo)$coefficients[8], 3)
colors <- densCols(geo.dist, all.bray.dist, colramp=clr)
plot(geo.dist, all.bray.dist, ylab="Bray-Curtis similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Total: slope = ", slope4), line = 1, cex=1)
abline(DD.all.geo, col = "black", lwd=3)
slope <- res_all_geo[1]
intercept <- res_all_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Add X-Axis Label to Plot
a.dd <- 'y'
if(a.dd == 'y'){
mtext("Geographic Distance", side = 1, adj = 0, outer = TRUE)
d1 <- diffslope(env.dist, act.bray.dist, env.dist, all.bray.dist, ic=TRUE, permutations=1000)
d2 <- diffslope(geo.dist, act.bray.dist, geo.dist, all.bray.dist, ic=TRUE, permutations=1000)
d3 <- diffic(env.dist, act.bray.dist, env.dist, all.bray.dist, resc.y=FALSE, permutations=1000)
d4 <- diffic(geo.dist, act.bray.dist, geo.dist, all.bray.dist, resc.y=FALSE, permutations=1000)
Mtitle <- paste("Bray-Curtis\n",
round(100*(abs((slope1-slope2)/mean(c(slope1, slope2)))),1), '% difference in environmental DDRs; p = ', d1[3],
'\n',round(100*(abs((slope3-slope4)/mean(c(slope3, slope4)))),1), '% difference in geographic DDRs; p = ', d2[3], sep="")
title(main=Mtitle, line=0, outer=T, cex.main=1.2)
}
dev.off()
print(c('act.env', 'all.env', 'act.geo', 'all.geo'))
print(c(slope1, slope2, slope3, slope4))
print(c(int1, int2, int3, int4))
100*(abs((int1-int2)/mean(c(int1, int2))))
100*(abs((int3-int4)/mean(c(int3, int4))))
# Regression for active weighted, environmental distance
DD.act.env <- lm(act.sore.dist ~ env.dist)
#summary(DD.act.env, correlation = TRUE)
# Regression for all weighted, environmental distance
DD.all.env <- lm(all.sore.dist ~ env.dist)
coeff <- summary(DD.all.env, correlation = TRUE)
# Regression for active weighted, geographic distance
DD.act.geo <- lm(act.sore.dist ~ geo.dist)
#summary(DD.act.geo, correlation = TRUE)
# Regression for all weighted, geographic distance
DD.all.geo <- lm(all.sore.dist ~ geo.dist)
coeff <- summary(DD.all.geo, correlation = TRUE)
clr <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
file <- paste("~/GitHub/DormancyDecay/figs/FromSites/DDR-Sorensen.png", sep="")
png(filename=file, width=5, height=5, units="in", res=600, pointsize=10)
par(mfrow=c(2, 2), mar = c(5,5,3,1), oma =c(0,0,4,0))
res_act_env <- m_and_b(act.com, env.dist, "bray", TRUE)
res_all_env <- m_and_b(all.com, env.dist, "bray", TRUE)
res_act_geo <- m_and_b(act.com, geo.dist, "bray", TRUE)
res_all_geo <- m_and_b(all.com, geo.dist, "bray", TRUE)
#miny = min(c(min(sapply(res_act_env, min)), min(sapply(res_all_env, min)),
#           min(sapply(res_act_geo, min)), min(sapply(res_all_geo, min))))
miny = 0.06
maxy = max(c(max(sapply(act.sore.dist, max)), max(sapply(all.sore.dist, max)),
max(sapply(act.sore.dist, max)), max(sapply(all.sore.dist, max))))
# Make Plot for active pres-abs (env)
slope1 <- round(coefficients(DD.act.env)[2], 3)
int1 <- round(coefficients(DD.act.env)[1], 3)
p <- round(summary(DD.act.env)$coefficients[8],3)
colors <- densCols(env.dist, act.sore.dist, colramp=clr)
plot(env.dist, act.sore.dist, ylab="Sørensen similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Active: slope = ", slope1), line = 1, cex=1)
abline(DD.act.env, col = "black", lwd=3)
slope <- res_act_env[1]
intercept <- res_act_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (env)
slope2 <- round(coefficients(DD.all.env)[2], 3)
int2 <- round(coefficients(DD.all.env)[1], 3)
p <- round(summary(DD.all.env)$coefficients[8], 3)
colors <- densCols(env.dist, all.sore.dist, colramp=clr)
plot(env.dist, all.sore.dist, ylab="Sørensen similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Total: slope = ", slope2), line = 1, cex=2)
abline(DD.all.env, col = "black", lwd=3)
slope <- res_all_env[1]
intercept <- res_all_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for active pres-abs (geo)
slope3 <- round(coefficients(DD.act.geo)[2], 3)
int3 <- round(coefficients(DD.act.geo)[1], 3)
p <- round(summary(DD.act.geo)$coefficients[8],3)
colors <- densCols(geo.dist, act.sore.dist, colramp=clr)
plot(geo.dist, act.sore.dist, ylab="Sørensen similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Active: slope = ", slope3), line = 1, cex=1)
abline(DD.act.geo, col = "black", lwd=3)
slope <- res_act_geo[1]
intercept <- res_act_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (geo)
slope4 <- round(coefficients(DD.all.geo)[2], 3)
int4 <- round(coefficients(DD.all.geo)[1], 3)
p <- round(summary(DD.all.geo)$coefficients[8], 3)
colors <- densCols(geo.dist, all.sore.dist, colramp=clr)
plot(geo.dist, all.sore.dist, ylab="Sørensen similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Total: slope = ", slope4), line = 1, cex=1)
abline(DD.all.geo, col = "black", lwd=3)
slope <- res_all_geo[1]
intercept <- res_all_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Add X-Axis Label to Plot
a.dd <- 'y'
if(a.dd == 'y'){
mtext("Geographic Distance", side = 1, adj = 0, outer = TRUE)
d1 <- diffslope(env.dist, act.sore.dist, env.dist, all.sore.dist, ic=TRUE, permutations=1000)
d2 <- diffslope(geo.dist, act.sore.dist, geo.dist, all.sore.dist, ic=TRUE, permutations=1000)
d3 <- diffic(env.dist, act.sore.dist, env.dist, all.sore.dist, resc.y=FALSE, permutations=1000)
d4 <- diffic(geo.dist, act.sore.dist, geo.dist, all.sore.dist, resc.y=FALSE, permutations=1000)
Mtitle <- paste("Sorensen\n",
round(100*(abs((slope1-slope2)/mean(c(slope1, slope2)))),1), '% difference in environmental DDRs; p = ', d1[3],
'\n',round(100*(abs((slope3-slope4)/mean(c(slope3, slope4)))),1), '% difference in geographic DDRs; p = ', d2[3], sep="")
title(main=Mtitle, line=0, outer=T, cex.main=1.2)
}
dev.off()
print(c('act.env', 'all.env', 'act.geo', 'all.geo'))
print(c(slope1, slope2, slope3, slope4))
print(c(int1, int2, int3, int4))
100*(abs((int1-int2)/mean(c(int1, int2))))
100*(abs((int3-int4)/mean(c(int3, int4))))
# Regression for active weighted, environmental distance
DD.act.env <- lm(act.canb.dist ~ env.dist)
#summary(DD.act.env, correlation = TRUE)
# Regression for all weighted, environmental distance
DD.all.env <- lm(all.canb.dist ~ env.dist)
coeff <- summary(DD.all.env, correlation = TRUE)
# Regression for active weighted, geographic distance
DD.act.geo <- lm(act.canb.dist ~ geo.dist)
#summary(DD.act.geo, correlation = TRUE)
# Regression for all weighted, geographic distance
DD.all.geo <- lm(all.canb.dist ~ geo.dist)
coeff <- summary(DD.all.geo, correlation = TRUE)
clr <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
file <- paste("~/GitHub/DormancyDecay/figs/FromSites/DDR-Canberra.png", sep="")
png(filename=file, width=5, height=5, units="in", res=600, pointsize=10)
par(mfrow=c(2, 2), mar = c(5,5,3,1), oma =c(0,0,4,0))
res_act_env <- m_and_b(act.com, env.dist, "canberra", FALSE)
res_all_env <- m_and_b(all.com, env.dist, "canberra", FALSE)
res_act_geo <- m_and_b(act.com, geo.dist, "canberra", FALSE)
res_all_geo <- m_and_b(all.com, geo.dist, "canberra", FALSE)
#miny = min(c(min(sapply(res_act_env, min)), min(sapply(res_all_env, min)),
#           min(sapply(res_act_geo, min)), min(sapply(res_all_geo, min))))
miny = 0.02
maxy = max(c(max(sapply(act.canb.dist, max)), max(sapply(all.canb.dist, max)),
max(sapply(act.canb.dist, max)), max(sapply(all.canb.dist, max))))
# Make Plot for active pres-abs (env)
slope1 <- round(coefficients(DD.act.env)[2], 3)
int1 <- round(coefficients(DD.act.env)[1], 3)
p <- round(summary(DD.act.env)$coefficients[8],3)
colors <- densCols(env.dist, act.canb.dist, colramp=clr)
plot(env.dist, act.canb.dist, ylab="Canberra similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Active: slope = ", slope1), line = 1, cex=1)
abline(DD.act.env, col = "black", lwd=3)
slope <- res_act_env[1]
intercept <- res_act_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (env)
slope2 <- round(coefficients(DD.all.env)[2], 3)
int2 <- round(coefficients(DD.all.env)[1], 3)
p <- round(summary(DD.all.env)$coefficients[8], 3)
colors <- densCols(env.dist, all.canb.dist, colramp=clr)
plot(env.dist, all.canb.dist, ylab="Canberra similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Total: slope = ", slope2), line = 1, cex=2)
abline(DD.all.env, col = "black", lwd=3)
slope <- res_all_env[1]
intercept <- res_all_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for active pres-abs (geo)
slope3 <- round(coefficients(DD.act.geo)[2], 3)
int3 <- round(coefficients(DD.act.geo)[1], 3)
p <- round(summary(DD.act.geo)$coefficients[8],3)
colors <- densCols(geo.dist, act.canb.dist, colramp=clr)
plot(geo.dist, act.canb.dist, ylab="Canberra similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Active: slope = ", slope3), line = 1, cex=1)
abline(DD.act.geo, col = "black", lwd=3)
slope <- res_act_geo[1]
intercept <- res_act_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (geo)
slope4 <- round(coefficients(DD.all.geo)[2], 3)
int4 <- round(coefficients(DD.all.geo)[1], 3)
p <- round(summary(DD.all.geo)$coefficients[8], 3)
colors <- densCols(geo.dist, all.canb.dist, colramp=clr)
plot(geo.dist, all.canb.dist, ylab="Canberra similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, maxy))
title(paste("Total: slope = ", slope4), line = 1, cex=1)
abline(DD.all.geo, col = "black", lwd=3)
slope <- res_all_geo[1]
intercept <- res_all_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Add X-Axis Label to Plot
a.dd <- 'y'
if(a.dd == 'y'){
mtext("Geographic Distance", side = 1, adj = 0, outer = TRUE)
d1 <- diffslope(env.dist, act.canb.dist, env.dist, all.canb.dist, ic=TRUE, permutations=1000)
d2 <- diffslope(geo.dist, act.canb.dist, geo.dist, all.canb.dist, ic=TRUE, permutations=1000)
Mtitle <- paste("Canberra\n",
round(100*(abs((slope1-slope2)/mean(c(slope1, slope2)))),1), '% difference in environmental DDRs; p = ', d1[3],
'\n',round(100*(abs((slope3-slope4)/mean(c(slope3, slope4)))),1), '% difference in geographic DDRs; p = ', d2[3], sep="")
title(main=Mtitle, line=0, outer=T, cex.main=1.2)
}
dev.off()
print(c('act.env', 'all.env', 'act.geo', 'all.geo'))
print(c(slope1, slope2, slope3, slope4))
print(c(int1, int2, int3, int4))
100*(abs((int1-int2)/mean(c(int1, int2))))
100*(abs((int3-int4)/mean(c(int3, int4))))
# Regression for active weighted, environmental distance
DD.act.env <- lm(act.bray.dist ~ env.dist)
#summary(DD.act.env, correlation = TRUE)
# Regression for all weighted, environmental distance
DD.all.env <- lm(all.bray.dist ~ env.dist)
coeff <- summary(DD.all.env, correlation = TRUE)
# Regression for active weighted, geographic distance
DD.act.geo <- lm(act.bray.dist ~ geo.dist)
#summary(DD.act.geo, correlation = TRUE)
# Regression for all weighted, geographic distance
DD.all.geo <- lm(all.bray.dist ~ geo.dist)
coeff <- summary(DD.all.geo, correlation = TRUE)
clr <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
file <- paste("~/GitHub/DormancyDecay/figs/FromSites/DDR-Bray-EnvVsGeo.png", sep="")
png(filename=file, width=5, height=5, units="in", res=600, pointsize=10)
par(mfrow=c(2, 2), mar = c(5,5,3,1), oma =c(0,0,4,0))
res_act_env <- m_and_b(act.com, env.dist, "bray", FALSE)
res_all_env <- m_and_b(all.com, env.dist, "bray", FALSE)
res_act_geo <- m_and_b(act.com, geo.dist, "bray", FALSE)
res_all_geo <- m_and_b(all.com, geo.dist, "bray", FALSE)
#miny = min(c(min(sapply(res_act_env, min)), min(sapply(res_all_env, min)),
#           min(sapply(res_act_geo, min)), min(sapply(res_all_geo, min))))
miny = 0.0
maxy = round(max(c(max(sapply(act.bray.dist, max)), max(sapply(all.bray.dist, max)),
max(sapply(act.bray.dist, max)), max(sapply(all.bray.dist, max)))),
digits = 1) + 0.1
# Make Plot for active pres-abs (env)
slope1 <- round(coefficients(DD.act.env)[2], 3)
int1 <- round(coefficients(DD.act.env)[1], 3)
p <- round(summary(DD.act.env)$coefficients[8],3)
colors <- densCols(env.dist, act.bray.dist, colramp=clr)
plot(env.dist, act.bray.dist, ylab="Bray-Curtis similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(act.bray.dist, max))))
title(paste("Active: slope = ", slope1), line = 1, cex=1)
abline(DD.act.env, col = "black", lwd=3)
slope <- res_act_env[1]
intercept <- res_act_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (env)
slope2 <- round(coefficients(DD.all.env)[2], 3)
int2 <- round(coefficients(DD.all.env)[1], 3)
p <- round(summary(DD.all.env)$coefficients[8], 3)
colors <- densCols(env.dist, all.bray.dist, colramp=clr)
plot(env.dist, all.bray.dist, ylab="Bray-Curtis similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(all.bray.dist, max))))
title(paste("Total: slope = ", slope2), line = 1, cex=2)
abline(DD.all.env, col = "black", lwd=3)
slope <- res_all_env[1]
intercept <- res_all_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for active pres-abs (geo)
slope3 <- round(coefficients(DD.act.geo)[2], 3)
int3 <- round(coefficients(DD.act.geo)[1], 3)
p <- round(summary(DD.act.geo)$coefficients[8],3)
colors <- densCols(geo.dist, act.bray.dist, colramp=clr)
plot(geo.dist, act.bray.dist, ylab="Bray-Curtis similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(act.bray.dist, max))))
title(paste("Active: slope = ", slope3), line = 1, cex=1)
abline(DD.act.geo, col = "black", lwd=3)
slope <- res_act_geo[1]
intercept <- res_act_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (geo)
slope4 <- round(coefficients(DD.all.geo)[2], 3)
int4 <- round(coefficients(DD.all.geo)[1], 3)
p <- round(summary(DD.all.geo)$coefficients[8], 3)
colors <- densCols(geo.dist, all.bray.dist, colramp=clr)
plot(geo.dist, all.bray.dist, ylab="Bray-Curtis similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(all.bray.dist, max))))
title(paste("Total: slope = ", slope4), line = 1, cex=1)
abline(DD.all.geo, col = "black", lwd=3)
slope <- res_all_geo[1]
intercept <- res_all_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Add X-Axis Label to Plot
a.dd <- 'y'
if(a.dd == 'y'){
mtext("Geographic Distance", side = 1, adj = 0, outer = TRUE)
d1 <- diffslope(env.dist, act.bray.dist, geo.dist, act.bray.dist, ic=TRUE, permutations=1000)
d2 <- diffslope(env.dist, all.bray.dist, geo.dist, all.bray.dist, ic=TRUE, permutations=1000)
Mtitle <- paste("Bray-Curtis\n",
round(100*(abs((slope1-slope3)/mean(c(slope1, slope3)))),1), '% difference in Active DDRs; p = ', d1[3],
'\n',round(100*(abs((slope2-slope4)/mean(c(slope2, slope4)))),1), '% difference in All DDRs; p = ', d2[3], sep="")
title(main=Mtitle, line=0, outer=T, cex.main=1.2)
}
dev.off()
print(c('act.env', 'act.geo', 'all.env', 'all.geo'))
print(c(slope1, slope3, slope2, slope4))
print(c(int1, int3, int2, int4))
100*(abs((int1-int3)/mean(c(int1, int3))))
100*(abs((int2-int4)/mean(c(int2, int4))))
# Regression for active weighted, environmental distance
DD.act.env <- lm(act.sore.dist ~ env.dist)
#summary(DD.act.env, correlation = TRUE)
# Regression for all weighted, environmental distance
DD.all.env <- lm(all.sore.dist ~ env.dist)
coeff <- summary(DD.all.env, correlation = TRUE)
# Regression for active weighted, geographic distance
DD.act.geo <- lm(act.sore.dist ~ geo.dist)
#summary(DD.act.geo, correlation = TRUE)
# Regression for all weighted, geographic distance
DD.all.geo <- lm(all.sore.dist ~ geo.dist)
coeff <- summary(DD.all.geo, correlation = TRUE)
clr <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
file <- paste("~/GitHub/DormancyDecay/figs/FromSites/DDR-Sorensen-EnvVsGeo.png", sep="")
png(filename=file, width=5, height=5, units="in", res=600, pointsize=10)
par(mfrow=c(2, 2), mar = c(5,5,3,1), oma =c(0,0,4,0))
res_act_env <- m_and_b(act.com, env.dist, "bray", TRUE)
res_all_env <- m_and_b(all.com, env.dist, "bray", TRUE)
res_act_geo <- m_and_b(act.com, geo.dist, "bray", TRUE)
res_all_geo <- m_and_b(all.com, geo.dist, "bray", TRUE)
#miny = min(c(min(sapply(res_act_env, min)), min(sapply(res_all_env, min)),
#           min(sapply(res_act_geo, min)), min(sapply(res_all_geo, min))))
miny = 0.06
maxy = max(c(max(sapply(act.sore.dist, max)), max(sapply(all.sore.dist, max)),
max(sapply(act.sore.dist, max)), max(sapply(all.sore.dist, max))))
# Make Plot for active pres-abs (env)
slope1 <- round(coefficients(DD.act.env)[2], 3)
int1 <- round(coefficients(DD.act.env)[1], 3)
p <- round(summary(DD.act.env)$coefficients[8],3)
colors <- densCols(env.dist, act.sore.dist, colramp=clr)
plot(env.dist, act.sore.dist, ylab="Sørensen similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(act.sore.dist, max))))
title(paste("Active: slope = ", slope1), line = 1, cex=1)
abline(DD.act.env, col = "black", lwd=3)
slope <- res_act_env[1]
intercept <- res_act_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (env)
slope2 <- round(coefficients(DD.all.env)[2], 3)
int2 <- round(coefficients(DD.all.env)[1], 3)
p <- round(summary(DD.all.env)$coefficients[8], 3)
colors <- densCols(env.dist, all.sore.dist, colramp=clr)
plot(env.dist, all.sore.dist, ylab="Sørensen similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(all.sore.dist, max))))
title(paste("Total: slope = ", slope2), line = 1, cex=2)
abline(DD.all.env, col = "black", lwd=3)
slope <- res_all_env[1]
intercept <- res_all_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for active pres-abs (geo)
slope3 <- round(coefficients(DD.act.geo)[2], 3)
int3 <- round(coefficients(DD.act.geo)[1], 3)
p <- round(summary(DD.act.geo)$coefficients[8],3)
colors <- densCols(geo.dist, act.sore.dist, colramp=clr)
plot(geo.dist, act.sore.dist, ylab="Sørensen similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(act.sore.dist, max))))
title(paste("Active: slope = ", slope3), line = 1, cex=1)
abline(DD.act.geo, col = "black", lwd=3)
slope <- res_act_geo[1]
intercept <- res_act_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (geo)
slope4 <- round(coefficients(DD.all.geo)[2], 3)
int4 <- round(coefficients(DD.all.geo)[1], 3)
p <- round(summary(DD.all.geo)$coefficients[8], 3)
colors <- densCols(geo.dist, all.sore.dist, colramp=clr)
plot(geo.dist, all.sore.dist, ylab="Sørensen similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(all.sore.dist, max))))
title(paste("Total: slope = ", slope4), line = 1, cex=1)
abline(DD.all.geo, col = "black", lwd=3)
slope <- res_all_geo[1]
intercept <- res_all_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Add X-Axis Label to Plot
a.dd <- 'y'
if(a.dd == 'y'){
mtext("Geographic Distance", side = 1, adj = 0, outer = TRUE)
d1 <- diffslope(env.dist, act.sore.dist, geo.dist, act.sore.dist, ic=TRUE, permutations=1000)
d2 <- diffslope(env.dist, all.sore.dist, geo.dist, all.sore.dist, ic=TRUE, permutations=1000)
Mtitle <- paste("Sorensen\n",
round(100*(abs((slope1-slope3)/mean(c(slope1, slope3)))),1), '% difference in Active DDRs; p = ', d1[3],
'\n',round(100*(abs((slope2-slope4)/mean(c(slope2, slope4)))),1), '% difference in All DDRs; p = ', d2[3], sep="")
title(main=Mtitle, line=0, outer=T, cex.main=1.2)
}
dev.off()
print(c('act.env', 'act.geo', 'all.env', 'all.geo'))
print(c(slope1, slope3, slope2, slope4))
print(c(int1, int3, int2, int4))
100*(abs((int1-int3)/mean(c(int1, int3))))
100*(abs((int2-int4)/mean(c(int2, int4))))
# Regression for active weighted, environmental distance
DD.act.env <- lm(act.canb.dist ~ env.dist)
#summary(DD.act.env, correlation = TRUE)
# Regression for all weighted, environmental distance
DD.all.env <- lm(all.canb.dist ~ env.dist)
coeff <- summary(DD.all.env, correlation = TRUE)
# Regression for active weighted, geographic distance
DD.act.geo <- lm(act.canb.dist ~ geo.dist)
#summary(DD.act.geo, correlation = TRUE)
# Regression for all weighted, geographic distance
DD.all.geo <- lm(all.canb.dist ~ geo.dist)
coeff <- summary(DD.all.geo, correlation = TRUE)
clr <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
file <- paste("~/GitHub/DormancyDecay/figs/FromSites/DDR-Canberra-EnvVsGeo.png", sep="")
png(filename=file, width=5, height=5, units="in", res=600, pointsize=10)
par(mfrow=c(2, 2), mar = c(5,5,3,1), oma =c(0,0,4,0))
res_act_env <- m_and_b(act.com, env.dist, "canberra", FALSE)
res_all_env <- m_and_b(all.com, env.dist, "canberra", FALSE)
res_act_geo <- m_and_b(act.com, geo.dist, "canberra", FALSE)
res_all_geo <- m_and_b(all.com, geo.dist, "canberra", FALSE)
#miny = min(c(min(sapply(res_act_env, min)), min(sapply(res_all_env, min)),
#           min(sapply(res_act_geo, min)), min(sapply(res_all_geo, min))))
miny = 0.02
maxy = max(c(max(sapply(act.canb.dist, max)), max(sapply(all.canb.dist, max)),
max(sapply(act.canb.dist, max)), max(sapply(all.canb.dist, max))))
# Make Plot for active pres-abs (env)
slope1 <- round(coefficients(DD.act.env)[2], 3)
int1 <- round(coefficients(DD.act.env)[1], 3)
p <- round(summary(DD.act.env)$coefficients[8],3)
colors <- densCols(env.dist, act.canb.dist, colramp=clr)
plot(env.dist, act.canb.dist, ylab="Canberra similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(act.canb.dist, max))))
title(paste("Active: slope = ", slope1), line = 1, cex=1)
abline(DD.act.env, col = "black", lwd=3)
slope <- res_act_env[1]
intercept <- res_act_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (env)
slope2 <- round(coefficients(DD.all.env)[2], 3)
int2 <- round(coefficients(DD.all.env)[1], 3)
p <- round(summary(DD.all.env)$coefficients[8], 3)
colors <- densCols(env.dist, all.canb.dist, colramp=clr)
plot(env.dist, all.canb.dist, ylab="Canberra similarity", pch=20,
xlab="Environmental distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(all.canb.dist, max))))
title(paste("Total: slope = ", slope2), line = 1, cex=2)
abline(DD.all.env, col = "black", lwd=3)
slope <- res_all_env[1]
intercept <- res_all_env[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for active pres-abs (geo)
slope3 <- round(coefficients(DD.act.geo)[2], 3)
int3 <- round(coefficients(DD.act.geo)[1], 3)
p <- round(summary(DD.act.geo)$coefficients[8],3)
colors <- densCols(geo.dist, act.canb.dist, colramp=clr)
plot(geo.dist, act.canb.dist, ylab="Canberra similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(act.canb.dist, max))))
title(paste("Active: slope = ", slope3), line = 1, cex=1)
abline(DD.act.geo, col = "black", lwd=3)
slope <- res_act_geo[1]
intercept <- res_act_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Make Plot for all pres-abs (geo)
slope4 <- round(coefficients(DD.all.geo)[2], 3)
int4 <- round(coefficients(DD.all.geo)[1], 3)
p <- round(summary(DD.all.geo)$coefficients[8], 3)
colors <- densCols(geo.dist, all.canb.dist, colramp=clr)
plot(geo.dist, all.canb.dist, ylab="Canberra similarity", pch=20,
xlab="Geographic distance", col = colors, cex=1, cex.lab=1.2,
ylim=c(miny, max(sapply(all.canb.dist, max))))
title(paste("Total: slope = ", slope4), line = 1, cex=1)
abline(DD.all.geo, col = "black", lwd=3)
slope <- res_all_geo[1]
intercept <- res_all_geo[2]
abline(a=intercept, b=slope, col = "red", lwd=2)
# Add X-Axis Label to Plot
a.dd <- 'y'
if(a.dd == 'y'){
mtext("Geographic Distance", side = 1, adj = 0, outer = TRUE)
d1 <- diffslope(env.dist, act.canb.dist, geo.dist, act.canb.dist, ic=TRUE, permutations=1000)
d2 <- diffslope(env.dist, all.canb.dist, geo.dist, all.canb.dist, ic=TRUE, permutations=1000)
Mtitle <- paste("Canberra\n",
round(100*(abs((slope1-slope3)/mean(c(slope1, slope3)))),1), '% difference in Active DDRs; p = ', d1[3],
'\n',round(100*(abs((slope2-slope4)/mean(c(slope2, slope4)))),1), '% difference in All DDRs; p = ', d2[3], sep="")
title(main=Mtitle, line=0, outer=T, cex.main=1.2)
}
dev.off()
print(c('act.env', 'act.geo', 'all.env', 'all.geo'))
print(c(slope1, slope3, slope2, slope4))
print(c(int1, int3, int2, int4))
100*(abs((int1-int3)/mean(c(int1, int3))))
100*(abs((int2-int4)/mean(c(int2, int4))))
